//Iterative Way
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* temp=head;
        int c=0;
        while(temp){
            if(temp!=NULL){
                c++;
            }
            temp=temp->next;
        }
        
        if(n>c){
            return head;
        }
        else if(n==c){
            return head->next;
        }
        else{
            int k=c-n;
            ListNode* prev=NULL;
            ListNode* temp=head;
            while(k--){
                prev=temp;
                temp=temp->next;
            }
            prev->next=temp->next;
            }
       return head;
       
        
    }
};
